import libreria as lib, math as m

def calcState(M,v,t):

    """ MÃ©todo que hace cambios en el estado del sistema dado el vector estado inicial y matriz de adjacencia
    :type v: list
    :param v: Vector 1 escrito de la forma [(a,b),(c,d)]

    :type w: list
    :param w: Vector 2 escrito de la forma [(a,b),(c,d)]

    :raises:

    :rtype: float
    """
    tempM = M
    for i in range(t-1):
        tempM = lib.multimatrices(tempM,M)
        
    rta = lib.multimatrices(tempM,v)
    for i in range(len(rta)):
          print(*rta[i]) 


calcState([      [(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,1/m.sqrt(2)),(0,0),(0,0),(1,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,1/m.sqrt(2)),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,0),(0,-1/m.sqrt(3)),(0,0),(1,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,0),(0,1/m.sqrt(3)),(0,0),(0,0),(1,0),(0,0),(0,0),(0,0)],
                 [(0,0),(0,-1/m.sqrt(3)),(0,-1/m.sqrt(3)),(0,0),(0,0),(1,0),(0,0),(0,0)],
                 [(0,0),(0,0),(0,1/m.sqrt(3)),(0,0),(0,0),(0,0),(1,0),(0,0)],
                 [(0,0),(0,0),(0,-1/m.sqrt(3)),(0,0),(0,0),(0,0),(0,0),(1,0)]],
                 [[(1,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)]],4)

"""
calcState([      [(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
                 [(1/2,0),(0,0),(0,0),(1,0),(0,0),(0,0),(0,0),(0,0)],
                 [(1/2,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,0),(1/3,0),(0,0),(1,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,0),(1/3,0),(0,0),(0,0),(1,0),(0,0),(0,0),(0,0)],
                 [(0,0),(1/3,0),(1/3,0),(0,0),(0,0),(1,0),(0,0),(0,0)],
                 [(0,0),(0,0),(1/3,0),(0,0),(0,0),(0,0),(1,0),(0,0)],
                 [(0,0),(0,0),(1/3,0),(0,0),(0,0),(0,0),(0,0),(1,0)]],
                 [[(1,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)]],4)


calcState([      [(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
                 [(0,0),(0,0),(0,0),(1,0),(0,0),(0,0)],
                 [(0,0),(1,0),(0,0),(0,0),(0,0),(1,0)],
                 [(0,0),(0,0),(1,0),(0,0),(0,0),(0,0)],
                 [(0,0),(0,0),(0,0),(0,0),(1,0),(0,0)],
                 [(1,0),(0,0),(0,0),(0,0),(0,0),(0,0)]],
                 [[(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(0,0)],
                 [(1,0)]],2019)

calcState([      [(0,0),(0,0),(0,0),(0,0),(0,0),(0,0)],
    [(0,0),(0,0),(0,0),(1,0),(0,0),(0,0)],
   [(0,0),(1,0),(0,0),(0,0),(0,0),(1,0)],
   [(0,0),(0,0),(1,0),(0,0),(0,0),(0,0)],
    [(0,0),(0,0),(0,0),(0,0),(1,0),(0,0)],
    [(1,0),(0,0),(0,0),(0,0),(0,0),(0,0)]],
    [[(6,0)],
    [(0,0)],
    [(3,0)],
    [(5,0)],
    [(3,0)],
    [(8,0)]],5000)"""



